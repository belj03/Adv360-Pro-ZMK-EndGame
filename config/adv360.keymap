#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        closeApp: closeApp {
            compatible = "zmk,behavior-tap-dance";
            label = "CLOSEAPP";
            #binding-cells = <0>;
            bindings = <&kp LC(F4)>, <&kp LA(F4)>;
        };

        backForward: backForward {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKFORWARD";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_ARROW)>, <&kp LA(RIGHT_ARROW)>;
        };

        vihmLayer: vihmLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "VIHMLAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
        };

        morphGui1: morphGui1 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI1";
            bindings = <&kp LG(N1)>, <&kp N1>;

            #binding-cells = <0>;
            keep-mods = <(MOD_RGUI|MOD_RALT|MOD_RSFT|MOD_RCTL|MOD_LGUI|MOD_LSFT|MOD_LCTL|MOD_LALT)>;
            mods = <(MOD_RGUI|MOD_RALT|MOD_RSFT|MOD_RCTL|MOD_LGUI|MOD_LALT|MOD_LSFT|MOD_LCTL)>;
        };

        morphGui2: morphGui2 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI2";
            bindings = <&kp LG(N2)>, <&kp N2>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morphGui3: morphGui3 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI3";
            bindings = <&kp LG(N3)>, <&kp N3>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI|MOD_RALT|MOD_RSFT|MOD_RCTL|MOD_LGUI|MOD_LALT|MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_LCTL|MOD_LALT|MOD_LGUI|MOD_LSFT|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morphGui4: morphGui4 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI4";
            bindings = <&kp LG(N4)>, <&kp N4>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RGUI|MOD_RALT)>;
        };

        morphGui5: morphGui5 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI5";
            bindings = <&kp LG(N5)>, <&kp N5>;

            #binding-cells = <0>;
            mods = <(MOD_RGUI|MOD_RALT|MOD_RSFT|MOD_RCTL|MOD_LGUI|MOD_LALT|MOD_LSFT|MOD_LCTL)>;
            keep-mods = <(MOD_RGUI|MOD_RALT|MOD_RSFT|MOD_RCTL|MOD_LGUI|MOD_LALT|MOD_LSFT|MOD_LCTL)>;
        };

        morphGui6: morphGui6 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI6";
            bindings = <&kp LG(N6)>, <&kp N6>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RGUI|MOD_RALT)>;
            keep-mods = <(MOD_RGUI|MOD_RALT|MOD_RSFT|MOD_RCTL|MOD_LGUI|MOD_LALT|MOD_LSFT|MOD_LCTL)>;
        };

        morphGui7: morphGui7 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI7";
            bindings = <&kp LG(N7)>, <&kp N7>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morphGui8: morphGui8 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI8";
            bindings = <&kp LG(N8)>, <&kp N8>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morphGui9: morphGui9 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI9";
            bindings = <&kp LG(N9)>, <&kp N9>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        morphGui0: morphGui0 {
            compatible = "zmk,behavior-mod-morph";
            label = "MORPHGUI0";
            bindings = <&kp LG(N0)>, <&kp N0>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
            keep-mods = <(MOD_LCTL|MOD_LSFT|MOD_LALT|MOD_LGUI|MOD_RCTL|MOD_RSFT|MOD_RALT|MOD_RGUI)>;
        };

        tdLayerCad: tdLayerCad {
            compatible = "zmk,behavior-tap-dance";
            label = "TDLAYERCAD";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&to 3>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            bindings = <
&tdLayerCad  &morphGui1  &morphGui2  &morphGui3   &morphGui4      &morphGui5  &tog 1                                                       &mo 6      &morphGui6  &morphGui7   &morphGui8   &morphGui9  &morphGui0          &kp MINUS
&kp ESC      &kp Q       &kp W       &kp E        &kp R           &kp T       &backForward                                                 &none      &kp Y       &kp U        &kp I        &kp O       &kp P               &kp BSLH
&kp TAB      &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F     &kp G       &closeApp     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H       &hm LSHFT J  &hm LCTRL K  &hm LALT L  &hm LGUI SEMICOLON  &kp SQT
&kp GRAVE    &kp Z       &kp X       &kp C        &vihmLayer 1 V  &kp B                                &kp HOME      &kp PG_UP                        &kp N       &kp M        &kp COMMA    &kp DOT     &kp FSLH            &none
&mo 2        &kp GRAVE   &kp CAPS    &kp LEFT     &kp RIGHT                   &kp BSPC      &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE              &kp UP       &kp DOWN     &kp LBKT    &kp RBKT            &mo 2
            >;
        };

        Keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 7      &kp LS(SEMICOLON)  &kp DOLLAR    &kp HASH   &kp PERCENT  &none         &none
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp LS(N9)         &kp KP_N7     &kp KP_N8  &kp KP_N9    &kp LS(N0)    &kp X
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp KP_PLUS        &kp KP_N4     &kp KP_N5  &kp KP_N6    &kp KP_MINUS  &kp LS(SQT)
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp KP_MULTIPLY    &kp KP_N1     &kp KP_N2  &kp KP_N3    &kp KP_SLASH  &none
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp SPACE                     &kp KP_EQUAL  &kp KP_N0  &kp KP_DOT   &none         &none
            >;
        };

        Fn {
            bindings = <
&kp F11  &kp F1    &kp F2    &kp F3     &kp F4     &kp F5  &tog 1                                            &mo 7   &kp F6  &kp F7     &kp F8     &kp F9    &kp F10   &kp F12
&trans   &trans    &kp RALT  &trans     &trans     &trans  &none                                             &none   &trans  &trans     &trans     &kp RALT  &trans    &trans
&trans   &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans  &none      &trans     &trans      &trans  &trans  &none   &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans   &trans    &trans    &trans     &trans     &trans                        &trans      &trans                  &trans  &trans     &trans     &trans    &trans    &trans
&trans   &trans    &trans    &trans     &trans             &kp SPACE  &kp ENTER  &trans      &trans  &trans  &trans          &trans     &trans     &trans    &trans    &trans
            >;
        };

        CAD {
            bindings = <
&to 0   &tog 4     &trans     &trans     &trans      &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT   &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(A)  &kp LC(S)  &kp LCTRL  &kp LSHIFT  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)   &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans     &trans     &trans              &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        CAD+Num {
            bindings = <
&trans  &trans     &trans   &trans  &trans     &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp N7   &kp N8  &kp N9     &kp M   &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp MINUS  &kp N4   &kp N5  &kp N6     &kp F   &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp N1   &kp N2  &kp N3     &kp I                   &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp DOT  &kp N0  &kp EQUAL          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Misc {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
